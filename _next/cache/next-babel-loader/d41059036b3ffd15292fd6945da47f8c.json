{"ast":null,"code":"import _objectSpread from \"@babel/runtime-corejs2/helpers/esm/objectSpread\";\nimport React from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { checkIfisAuthorized } from \"../HelperFunctions\";\n\nfunction useAuth() {\n  const authSelector = useSelector(state => state);\n  const [state, setstate] = React.useState({\n    isAuthorized: {\n      checkingInProgress: true,\n      checkResult: \"NOT_CHECKED\"\n    }\n  });\n\n  function checkAuth() {\n    const auth = _objectSpread({}, authSelector);\n\n    if (auth.jwt !== \"\") {\n      checkIfisAuthorized(auth.jwt).then(data => {\n        const {\n          isAuthorized\n        } = JSON.parse(data);\n\n        if (isAuthorized.userEmail) {\n          // console.log(auth);\n          setstate({\n            isAuthorized: {\n              checkingInProgress: false,\n              checkResult: \"FOUND\",\n              role: auth.role,\n              jwt: auth.jwt\n            }\n          });\n        } else {\n          setstate({\n            isAuthorized: {\n              checkingInProgress: false,\n              checkResult: \"NOT_FOUND\"\n            }\n          });\n        }\n      });\n    } else {\n      setstate({\n        isAuthorized: {\n          checkingInProgress: false,\n          checkResult: \"NOT_FOUND\"\n        }\n      });\n    }\n  }\n\n  if (state.isAuthorized.checkingInProgress) {\n    checkAuth();\n  }\n\n  return state;\n}\n\nexport default useAuth;","map":null,"metadata":{},"sourceType":"module"}