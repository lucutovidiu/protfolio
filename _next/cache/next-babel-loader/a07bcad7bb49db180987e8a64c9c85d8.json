{"ast":null,"code":"import _objectSpread from \"@babel/runtime-corejs2/helpers/esm/objectSpread\";\nimport _slicedToArray from \"@babel/runtime-corejs2/helpers/esm/slicedToArray\";\nimport React from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { checkIfisAuthorized } from \"../HelperFunctions\";\n\nfunction useAuth() {\n  var authSelector = useSelector(function (state) {\n    return state;\n  });\n\n  var _React$useState = React.useState({\n    isAuthorized: {\n      checkingInProgress: true,\n      checkResult: \"NOT_CHECKED\"\n    }\n  }),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      state = _React$useState2[0],\n      setstate = _React$useState2[1];\n\n  function checkAuth() {\n    var auth = _objectSpread({}, authSelector);\n\n    if (auth.jwt !== \"\") {\n      checkIfisAuthorized(auth.jwt).then(function (data) {\n        var _JSON$parse = JSON.parse(data),\n            isAuthorized = _JSON$parse.isAuthorized;\n\n        if (isAuthorized.userEmail) {\n          // console.log(auth);\n          setstate({\n            isAuthorized: {\n              checkingInProgress: false,\n              checkResult: \"FOUND\",\n              role: auth.role,\n              jwt: auth.jwt\n            }\n          });\n        } else {\n          setstate({\n            isAuthorized: {\n              checkingInProgress: false,\n              checkResult: \"NOT_FOUND\"\n            }\n          });\n        }\n      });\n    } else {\n      setstate({\n        isAuthorized: {\n          checkingInProgress: false,\n          checkResult: \"NOT_FOUND\"\n        }\n      });\n    }\n  }\n\n  if (state.isAuthorized.checkingInProgress) {\n    checkAuth();\n  }\n\n  return state;\n}\n\nexport default useAuth;","map":{"version":3,"sources":["C:\\xampp\\htdocs\\ovi_port_website\\app\\components\\Auth\\useAuth.js"],"names":["React","useSelector","checkIfisAuthorized","useAuth","authSelector","state","useState","isAuthorized","checkingInProgress","checkResult","setstate","checkAuth","auth","jwt","then","data","JSON","parse","userEmail","role"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,SAASC,mBAAT,QAAoC,oBAApC;;AAEA,SAASC,OAAT,GAAmB;AACjB,MAAMC,YAAY,GAAGH,WAAW,CAAC,UAAAI,KAAK;AAAA,WAAIA,KAAJ;AAAA,GAAN,CAAhC;;AADiB,wBAESL,KAAK,CAACM,QAAN,CAAe;AACvCC,IAAAA,YAAY,EAAE;AAAEC,MAAAA,kBAAkB,EAAE,IAAtB;AAA4BC,MAAAA,WAAW,EAAE;AAAzC;AADyB,GAAf,CAFT;AAAA;AAAA,MAEVJ,KAFU;AAAA,MAEHK,QAFG;;AAMjB,WAASC,SAAT,GAAqB;AACnB,QAAMC,IAAI,qBAAQR,YAAR,CAAV;;AACA,QAAIQ,IAAI,CAACC,GAAL,KAAa,EAAjB,EAAqB;AACnBX,MAAAA,mBAAmB,CAACU,IAAI,CAACC,GAAN,CAAnB,CAA8BC,IAA9B,CAAmC,UAAAC,IAAI,EAAI;AAAA,0BAChBC,IAAI,CAACC,KAAL,CAAWF,IAAX,CADgB;AAAA,YACjCR,YADiC,eACjCA,YADiC;;AAEzC,YAAIA,YAAY,CAACW,SAAjB,EAA4B;AAC1B;AACAR,UAAAA,QAAQ,CAAC;AACPH,YAAAA,YAAY,EAAE;AACZC,cAAAA,kBAAkB,EAAE,KADR;AAEZC,cAAAA,WAAW,EAAE,OAFD;AAGZU,cAAAA,IAAI,EAAEP,IAAI,CAACO,IAHC;AAIZN,cAAAA,GAAG,EAAED,IAAI,CAACC;AAJE;AADP,WAAD,CAAR;AAQD,SAVD,MAUO;AACLH,UAAAA,QAAQ,CAAC;AACPH,YAAAA,YAAY,EAAE;AACZC,cAAAA,kBAAkB,EAAE,KADR;AAEZC,cAAAA,WAAW,EAAE;AAFD;AADP,WAAD,CAAR;AAMD;AACF,OApBD;AAqBD,KAtBD,MAsBO;AACLC,MAAAA,QAAQ,CAAC;AACPH,QAAAA,YAAY,EAAE;AAAEC,UAAAA,kBAAkB,EAAE,KAAtB;AAA6BC,UAAAA,WAAW,EAAE;AAA1C;AADP,OAAD,CAAR;AAGD;AACF;;AACD,MAAIJ,KAAK,CAACE,YAAN,CAAmBC,kBAAvB,EAA2C;AACzCG,IAAAA,SAAS;AACV;;AAED,SAAON,KAAP;AACD;;AAED,eAAeF,OAAf","sourcesContent":["import React from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { checkIfisAuthorized } from \"../HelperFunctions\";\r\n\r\nfunction useAuth() {\r\n  const authSelector = useSelector(state => state);\r\n  const [state, setstate] = React.useState({\r\n    isAuthorized: { checkingInProgress: true, checkResult: \"NOT_CHECKED\" }\r\n  });\r\n\r\n  function checkAuth() {\r\n    const auth = { ...authSelector };\r\n    if (auth.jwt !== \"\") {\r\n      checkIfisAuthorized(auth.jwt).then(data => {\r\n        const { isAuthorized } = JSON.parse(data);\r\n        if (isAuthorized.userEmail) {\r\n          // console.log(auth);\r\n          setstate({\r\n            isAuthorized: {\r\n              checkingInProgress: false,\r\n              checkResult: \"FOUND\",\r\n              role: auth.role,\r\n              jwt: auth.jwt\r\n            }\r\n          });\r\n        } else {\r\n          setstate({\r\n            isAuthorized: {\r\n              checkingInProgress: false,\r\n              checkResult: \"NOT_FOUND\"\r\n            }\r\n          });\r\n        }\r\n      });\r\n    } else {\r\n      setstate({\r\n        isAuthorized: { checkingInProgress: false, checkResult: \"NOT_FOUND\" }\r\n      });\r\n    }\r\n  }\r\n  if (state.isAuthorized.checkingInProgress) {\r\n    checkAuth();\r\n  }\r\n\r\n  return state;\r\n}\r\n\r\nexport default useAuth;\r\n"]},"metadata":{},"sourceType":"module"}