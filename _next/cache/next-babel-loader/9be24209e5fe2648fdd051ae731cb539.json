{"ast":null,"code":"var __jsx = React.createElement;\nimport React from \"react\";\nimport Link from \"next/link\";\nimport { connect } from \"react-redux\";\n\nclass NavbarMeniu extends React.Component {\n  constructor(props) {\n    super(props);\n    this.LogOut = this.LogOut.bind(this);\n  }\n\n  shouldComponentUpdate(nextProps) {\n    if (this.props.isAuthenticaticated === nextProps.isAuthenticaticated) return false;else return true;\n  }\n\n  LogOut() {\n    this.props.logout();\n  } // const isAuthenticaticated = useSelector(state => state.isAuthenticaticated);\n  // console.log(isAuthenticaticated);\n\n\n  btnRouteColor(routeName) {\n    return this.props.tab === routeName || typeof this.props.tab === \"undefined\" ? {\n      color: \"#3498db\"\n    } : {\n      color: \"rgb(158, 155, 155)\"\n    };\n  } // console.log(homeColorBtn);\n\n\n  render() {\n    return __jsx(React.Fragment, null, __jsx(\"li\", null, __jsx(Link, {\n      href: \"/\"\n    }, __jsx(\"a\", {\n      style: this.btnRouteColor(\"Home\")\n    }, \"Home\"))), __jsx(\"li\", null, __jsx(Link, {\n      href: \"/portfolios\"\n    }, __jsx(\"a\", {\n      style: this.btnRouteColor(\"Protfolios\")\n    }, \"Protfolios\"))), __jsx(\"li\", null, __jsx(Link, {\n      href: \"/blog\"\n    }, __jsx(\"a\", {\n      style: this.btnRouteColor(\"Blog\")\n    }, \"Blog\"))), __jsx(\"li\", null, __jsx(Link, {\n      href: \"/contact\",\n      as: \"/contact\"\n    }, __jsx(\"a\", {\n      style: this.btnRouteColor(\"Contact\")\n    }, \"Contact\"))), __jsx(\"li\", null, __jsx(Link, {\n      href: \"/about\"\n    }, __jsx(\"a\", {\n      style: this.btnRouteColor(\"About\")\n    }, \"About\"))), __jsx(\"li\", null, this.props.isAuthenticaticated ? __jsx(\"button\", {\n      className: \"a-button btn\",\n      onClick: this.LogOut\n    }, \"Logout\") : __jsx(Link, {\n      href: \"/login\"\n    }, __jsx(\"a\", {\n      style: this.btnRouteColor(\"Login\")\n    }, \"Login\"))));\n  }\n\n}\n\nfunction mapStateToProps(state) {\n  return {\n    isAuthenticaticated: state.isAuthenticaticated\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    logout: () => dispatch({\n      type: \"LOGOUT\"\n    })\n  };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(NavbarMeniu);","map":null,"metadata":{},"sourceType":"module"}