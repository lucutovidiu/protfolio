{"ast":null,"code":"var _jsxFileName = \"C:\\\\xampp\\\\htdocs\\\\ovi_port_website\\\\app\\\\components\\\\Login\\\\LoginComponent.js\";\nvar __jsx = React.createElement;\nimport React, { useRef, useState, useContext } from \"react\";\nimport { Col } from \"react-bootstrap\";\nimport { fetchGraphQL } from \"../HelperFunctions\";\nimport CustomModel from \"../HelperComponents/CustomModel\";\nimport validator from \"validator\";\nimport { useDispatch } from \"react-redux\";\n\nvar LoginComponent = function LoginComponent(props) {\n  var dispatch = useDispatch();\n  var userEmail = useRef(\"\");\n  var password = useRef(\"\");\n\n  var _useState = useState({\n    showModal: false,\n    msgHeader: \"\",\n    msgBody: []\n  }),\n      modal = _useState[0],\n      setModel = _useState[1];\n\n  var handleClose = function handleClose() {\n    return setModel({\n      showModal: false,\n      msgHeader: \"\",\n      msgBody: []\n    });\n  };\n\n  var handleShow = function handleShow(msgHeader, msgBody) {\n    return setModel({\n      showModal: true,\n      msgHeader: msgHeader,\n      msgBody: msgBody\n    });\n  };\n\n  function fetchUser() {\n    var query = \"\\n    {\\n      TryLogin(userEmail:\\\"\".concat(userEmail.current.value, \"\\\",password: \\\"\").concat(password.current.value, \"\\\")\\n      }\\n    \");\n    fetchGraphQL(query).then(function (data) {\n      try {\n        var _JSON$parse = JSON.parse(data.TryLogin),\n            msg = _JSON$parse.msg,\n            jwtToken = _JSON$parse.jwtToken,\n            role = _JSON$parse.role;\n\n        if (msg === \"ok\") {\n          dispatch({\n            type: \"AUTH_USER\",\n            payload: {\n              loggedInUser: userEmail.current.value,\n              jwt: jwtToken,\n              role: role\n            }\n          });\n          window.location = \"/\"; // handleShow(\"Success\", [\"you're logged in\"]);\n        } else {\n          handleShow(\"Error\", [\"Username or password incorect!!\"]);\n        }\n      } catch (err) {\n        handleShow(\"Error\", [\"Internal Error\"]);\n      } // if (msg === \"ok\") {\n      //   console.log(jwtToken);\n      // }\n\n    })[\"catch\"](function (err) {\n      console.log(err);\n      handleShow(\"Error\", [\"Username or password incorect!!\"]);\n    });\n  }\n\n  function loginMe() {\n    var errMsg = [];\n    if (!validator.isEmail(userEmail.current.value)) errMsg.push(\"Invalid Email\");\n    if (validator.isEmpty(password.current.value)) errMsg.push(\"Password can not be Empty\");\n\n    if (errMsg.length > 0) {\n      handleShow(\"Error\", errMsg);\n    } else {\n      fetchUser();\n    }\n  }\n\n  return __jsx(React.Fragment, null, __jsx(CustomModel, {\n    show: modal.showModal,\n    handleClose: handleClose,\n    msgHeader: modal.msgHeader,\n    msgBody: modal.msgBody,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84\n    },\n    __self: this\n  }), __jsx(Col, {\n    xs: 12,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90\n    },\n    __self: this\n  }, __jsx(\"h4\", {\n    style: {\n      color: \"#01c851\"\n    },\n    className: \"text-center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91\n    },\n    __self: this\n  }, \"Login\")), __jsx(Col, {\n    xs: 12,\n    className: \"pt-5\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95\n    },\n    __self: this\n  }, __jsx(\"div\", {\n    className: \"group\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96\n    },\n    __self: this\n  }, __jsx(\"input\", {\n    type: \"text\",\n    required: true,\n    ref: userEmail,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97\n    },\n    __self: this\n  }), __jsx(\"span\", {\n    className: \"bar\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99\n    },\n    __self: this\n  }), __jsx(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100\n    },\n    __self: this\n  }, \"Email\"))), __jsx(Col, {\n    xs: 12,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103\n    },\n    __self: this\n  }, __jsx(\"div\", {\n    className: \"group\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104\n    },\n    __self: this\n  }, __jsx(\"input\", {\n    type: \"password\",\n    required: true,\n    ref: password,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105\n    },\n    __self: this\n  }), __jsx(\"span\", {\n    className: \"bar\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107\n    },\n    __self: this\n  }), __jsx(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108\n    },\n    __self: this\n  }, \"Password\"))), __jsx(Col, {\n    xs: 12,\n    className: \"pt-3\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111\n    },\n    __self: this\n  }, __jsx(\"button\", {\n    onClick: loginMe,\n    className: \"btn btn-success\",\n    type: \"submit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112\n    },\n    __self: this\n  }, \"Login\"), __jsx(\"button\", {\n    onClick: props.toggleLogin,\n    className: \"btn btn-success ml-3\",\n    type: \"submit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115\n    },\n    __self: this\n  }, \"Signup \", __jsx(\"i\", {\n    className: \"fas fa-long-arrow-alt-right\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120\n    },\n    __self: this\n  }))), __jsx(Col, {\n    xs: 12,\n    className: \"mt-3\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123\n    },\n    __self: this\n  }, __jsx(\"button\", {\n    onClick: props.forgotPassword,\n    className: \"btn btn-outline-ligh\",\n    type: \"submit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124\n    },\n    __self: this\n  }, \"Forgot Password\")));\n};\n\nexport default LoginComponent;","map":{"version":3,"sources":["C:\\xampp\\htdocs\\ovi_port_website\\app\\components\\Login\\LoginComponent.js"],"names":["React","useRef","useState","useContext","Col","fetchGraphQL","CustomModel","validator","useDispatch","LoginComponent","props","dispatch","userEmail","password","showModal","msgHeader","msgBody","modal","setModel","handleClose","handleShow","fetchUser","query","current","value","then","data","JSON","parse","TryLogin","msg","jwtToken","role","type","payload","loggedInUser","jwt","window","location","err","console","log","loginMe","errMsg","isEmail","push","isEmpty","length","color","toggleLogin","forgotPassword"],"mappings":"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","sourcesContent":["import React, { useRef, useState, useContext } from \"react\";\r\nimport { Col } from \"react-bootstrap\";\r\nimport { fetchGraphQL } from \"../HelperFunctions\";\r\nimport CustomModel from \"../HelperComponents/CustomModel\";\r\nimport validator from \"validator\";\r\nimport { useDispatch } from \"react-redux\";\r\n\r\nconst LoginComponent = props => {\r\n  const dispatch = useDispatch();\r\n  const userEmail = useRef(\"\");\r\n  const password = useRef(\"\");\r\n  const [modal, setModel] = useState({\r\n    showModal: false,\r\n    msgHeader: \"\",\r\n    msgBody: []\r\n  });\r\n\r\n  const handleClose = () =>\r\n    setModel({\r\n      showModal: false,\r\n      msgHeader: \"\",\r\n      msgBody: []\r\n    });\r\n  const handleShow = (msgHeader, msgBody) =>\r\n    setModel({\r\n      showModal: true,\r\n      msgHeader,\r\n      msgBody\r\n    });\r\n\r\n  function fetchUser() {\r\n    const query = `\r\n    {\r\n      TryLogin(userEmail:\"${userEmail.current.value}\",password: \"${password.current.value}\")\r\n      }\r\n    `;\r\n    fetchGraphQL(query)\r\n      .then(data => {\r\n        try {\r\n          let { msg, jwtToken, role } = JSON.parse(data.TryLogin);\r\n          if (msg === \"ok\") {\r\n            dispatch({\r\n              type: \"AUTH_USER\",\r\n              payload: {\r\n                loggedInUser: userEmail.current.value,\r\n                jwt: jwtToken,\r\n                role\r\n              }\r\n            });\r\n            window.location = \"/\";\r\n            // handleShow(\"Success\", [\"you're logged in\"]);\r\n          } else {\r\n            handleShow(\"Error\", [\"Username or password incorect!!\"]);\r\n          }\r\n        } catch (err) {\r\n          handleShow(\"Error\", [\"Internal Error\"]);\r\n        }\r\n        // if (msg === \"ok\") {\r\n        //   console.log(jwtToken);\r\n        // }\r\n      })\r\n      .catch(err => {\r\n        console.log(err);\r\n        handleShow(\"Error\", [\"Username or password incorect!!\"]);\r\n      });\r\n  }\r\n\r\n  function loginMe() {\r\n    let errMsg = [];\r\n    if (!validator.isEmail(userEmail.current.value))\r\n      errMsg.push(\"Invalid Email\");\r\n    if (validator.isEmpty(password.current.value))\r\n      errMsg.push(\"Password can not be Empty\");\r\n\r\n    if (errMsg.length > 0) {\r\n      handleShow(\"Error\", errMsg);\r\n    } else {\r\n      fetchUser();\r\n    }\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <CustomModel\r\n        show={modal.showModal}\r\n        handleClose={handleClose}\r\n        msgHeader={modal.msgHeader}\r\n        msgBody={modal.msgBody}\r\n      />\r\n      <Col xs={12}>\r\n        <h4 style={{ color: \"#01c851\" }} className=\"text-center\">\r\n          Login\r\n        </h4>\r\n      </Col>\r\n      <Col xs={12} className=\"pt-5\">\r\n        <div className=\"group\">\r\n          <input type=\"text\" required ref={userEmail} />\r\n          {/* <span class=\"highlight\" /> */}\r\n          <span className=\"bar\" />\r\n          <label>Email</label>\r\n        </div>\r\n      </Col>\r\n      <Col xs={12}>\r\n        <div className=\"group\">\r\n          <input type=\"password\" required ref={password} />\r\n          {/* <span class=\"highlight\" /> */}\r\n          <span className=\"bar\" />\r\n          <label>Password</label>\r\n        </div>\r\n      </Col>\r\n      <Col xs={12} className=\"pt-3\">\r\n        <button onClick={loginMe} className=\"btn btn-success\" type=\"submit\">\r\n          Login\r\n        </button>\r\n        <button\r\n          onClick={props.toggleLogin}\r\n          className=\"btn btn-success ml-3\"\r\n          type=\"submit\"\r\n        >\r\n          Signup <i className=\"fas fa-long-arrow-alt-right\" />\r\n        </button>\r\n      </Col>\r\n      <Col xs={12} className=\"mt-3\">\r\n        <button\r\n          onClick={props.forgotPassword}\r\n          className=\"btn btn-outline-ligh\"\r\n          type=\"submit\"\r\n        >\r\n          Forgot Password\r\n        </button>\r\n      </Col>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default LoginComponent;\r\n"]},"metadata":{},"sourceType":"module"}