{"ast":null,"code":"import _extends from \"@babel/runtime-corejs2/helpers/esm/extends\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\xampp\\\\htdocs\\\\ovi_port_website\\\\app\\\\pages\\\\_app.js\";\nvar __jsx = React.createElement;\nimport React from \"react\";\nimport App, { Container } from \"next/app\";\nimport \"../static/styles/_mainStyle.scss\";\nimport \"../static/styles/_helperClases.scss\";\nimport \"../static/styles/_materialDesignInput.scss\";\nimport \"bootstrap/dist/css/bootstrap.min.css\"; // import Head from \"next/head\";\n\nimport { Provider } from \"react-redux\";\nimport withReduxStore from \"../components/React-Redux/with-redux-store\"; // import { createStore, applyMiddleware } from \"redux\";\n// import UserReducer from \"../components/ReactContext/UserReducer\";\n// import { persistStore, persistReducer } from \"redux-persist\";\n// // import storage from \"redux-persist/lib/storage\"; // defaults to localStorage for web and AsyncStorage for react-native\n// import storage from \"redux-persist/lib/storage/session\";\n// import { PersistGate } from \"redux-persist/integration/react\";\n// import thunk from \"redux-thunk\";\n\nvar MyApp =\n/*#__PURE__*/\nfunction (_App) {\n  _inherits(MyApp, _App);\n\n  function MyApp() {\n    _classCallCheck(this, MyApp);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(MyApp).apply(this, arguments));\n  }\n\n  _createClass(MyApp, [{\n    key: \"render\",\n    // componentDidMount() {\n    //   // Remove the server-side injected CSS.\n    //   const jssStyles = document.querySelector(\"#jss-server-side\");\n    //   if (jssStyles) {\n    //     jssStyles.parentNode.removeChild(jssStyles);\n    //   }\n    // }\n    // Only uncomment this method if you have blocking data requirements for\n    // every single page in your application. This disables the ability to\n    // perform automatic static optimization, causing every page in your app to\n    // be server-side rendered.\n    //\n    // static async getInitialProps(appContext) {\n    //   // calls page's `getInitialProps` and fills `appProps.pageProps`\n    //   const appProps = await App.getInitialProps(appContext);\n    //   return { ...appProps };\n    // }\n    value: function render() {\n      var _this$props = this.props,\n          Component = _this$props.Component,\n          pageProps = _this$props.pageProps,\n          reduxStore = _this$props.reduxStore; // const persistConfig = {\n      //   key: \"root\",\n      //   storage\n      // };\n      // const persistedReducer = persistReducer(persistConfig, UserReducer);\n      // let store = createStore(persistedReducer, applyMiddleware(thunk));\n      // let persistor = persistStore(store);\n\n      return (//   <PersistGate loading={null} persistor={persistor}>\n        __jsx(Provider, {\n          store: reduxStore,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 50\n          },\n          __self: this\n        }, __jsx(Component, _extends({}, pageProps, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 53\n          },\n          __self: this\n        }))) //   </PersistGate>\n\n      );\n    }\n  }]);\n\n  return MyApp;\n}(App);\n\nexport default withReduxStore(MyApp);","map":{"version":3,"sources":["C:\\xampp\\htdocs\\ovi_port_website\\app\\pages\\_app.js"],"names":["React","App","Container","Provider","withReduxStore","MyApp","props","Component","pageProps","reduxStore"],"mappings":";;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,GAAP,IAAcC,SAAd,QAA+B,UAA/B;AACA,OAAO,kCAAP;AACA,OAAO,qCAAP;AACA,OAAO,4CAAP;AACA,OAAO,sCAAP,C,CACA;;AACA,SAASC,QAAT,QAAyB,aAAzB;AACA,OAAOC,cAAP,MAA2B,4CAA3B,C,CACA;AACA;AACA;AACA;AACA;AACA;AACA;;IAEMC,K;;;;;;;;;;;;;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;6BAES;AAAA,wBACsC,KAAKC,KAD3C;AAAA,UACCC,SADD,eACCA,SADD;AAAA,UACYC,SADZ,eACYA,SADZ;AAAA,UACuBC,UADvB,eACuBA,UADvB,EAEP;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,aACE;AACA,cAAC,QAAD;AAAU,UAAA,KAAK,EAAEA,UAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAGE,MAAC,SAAD,eAAeD,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAHF,CAFF,CAOE;;AAPF;AASD;;;;EAvCiBP,G;;AA0CpB,eAAeG,cAAc,CAACC,KAAD,CAA7B","sourcesContent":["import React from \"react\";\r\nimport App, { Container } from \"next/app\";\r\nimport \"../static/styles/_mainStyle.scss\";\r\nimport \"../static/styles/_helperClases.scss\";\r\nimport \"../static/styles/_materialDesignInput.scss\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\n// import Head from \"next/head\";\r\nimport { Provider } from \"react-redux\";\r\nimport withReduxStore from \"../components/React-Redux/with-redux-store\";\r\n// import { createStore, applyMiddleware } from \"redux\";\r\n// import UserReducer from \"../components/ReactContext/UserReducer\";\r\n// import { persistStore, persistReducer } from \"redux-persist\";\r\n// // import storage from \"redux-persist/lib/storage\"; // defaults to localStorage for web and AsyncStorage for react-native\r\n// import storage from \"redux-persist/lib/storage/session\";\r\n// import { PersistGate } from \"redux-persist/integration/react\";\r\n// import thunk from \"redux-thunk\";\r\n\r\nclass MyApp extends App {\r\n  // componentDidMount() {\r\n  //   // Remove the server-side injected CSS.\r\n  //   const jssStyles = document.querySelector(\"#jss-server-side\");\r\n  //   if (jssStyles) {\r\n  //     jssStyles.parentNode.removeChild(jssStyles);\r\n  //   }\r\n  // }\r\n\r\n  // Only uncomment this method if you have blocking data requirements for\r\n  // every single page in your application. This disables the ability to\r\n  // perform automatic static optimization, causing every page in your app to\r\n  // be server-side rendered.\r\n  //\r\n  // static async getInitialProps(appContext) {\r\n  //   // calls page's `getInitialProps` and fills `appProps.pageProps`\r\n  //   const appProps = await App.getInitialProps(appContext);\r\n\r\n  //   return { ...appProps };\r\n  // }\r\n\r\n  render() {\r\n    const { Component, pageProps, reduxStore } = this.props;\r\n    // const persistConfig = {\r\n    //   key: \"root\",\r\n    //   storage\r\n    // };\r\n    // const persistedReducer = persistReducer(persistConfig, UserReducer);\r\n    // let store = createStore(persistedReducer, applyMiddleware(thunk));\r\n    // let persistor = persistStore(store);\r\n    return (\r\n      //   <PersistGate loading={null} persistor={persistor}>\r\n      <Provider store={reduxStore}>\r\n        {/* CssBaseline kickstart an elegant, consistent, and simple baseline to build upon. */}\r\n        {/* <CssBaseline /> */}\r\n        <Component {...pageProps} />\r\n      </Provider>\r\n      //   </PersistGate>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withReduxStore(MyApp);\r\n"]},"metadata":{},"sourceType":"module"}