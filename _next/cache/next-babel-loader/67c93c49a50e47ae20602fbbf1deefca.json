{"ast":null,"code":"import _objectSpread from \"@babel/runtime-corejs2/helpers/esm/objectSpread\";\nimport _slicedToArray from \"@babel/runtime-corejs2/helpers/esm/slicedToArray\";\nimport React from \"react\";\nimport { fetchGraphQL } from \"./HelperFunctions\";\nexport function useGetPortfolios() {\n  var _React$useState = React.useState(null),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      data = _React$useState2[0],\n      setData = _React$useState2[1];\n\n  var _React$useState3 = React.useState(false),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      dataRequested = _React$useState4[0],\n      setDataRequested = _React$useState4[1];\n\n  if (!dataRequested) {\n    setDataRequested(true);\n    var query = \"{\\n      GetPortfolios{\\n       id\\n       title\\n       shortDescription\\n       technologiesUsed\\n      }\\n      }\";\n    fetchGraphQL(query).then(function (data) {\n      setData(_objectSpread({}, data));\n    })[\"catch\"](function (err) {\n      console.log(err);\n    });\n  }\n\n  return {\n    data: data\n  };\n}","map":{"version":3,"sources":["C:\\xampp\\htdocs\\ovi_port_website\\app\\components\\CustomHooks.js"],"names":["React","fetchGraphQL","useGetPortfolios","useState","data","setData","dataRequested","setDataRequested","query","then","err","console","log"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,YAAT,QAA6B,mBAA7B;AACA,OAAO,SAASC,gBAAT,GAA4B;AAAA,wBACTF,KAAK,CAACG,QAAN,CAAe,IAAf,CADS;AAAA;AAAA,MAC1BC,IAD0B;AAAA,MACpBC,OADoB;;AAAA,yBAESL,KAAK,CAACG,QAAN,CAAe,KAAf,CAFT;AAAA;AAAA,MAE1BG,aAF0B;AAAA,MAEXC,gBAFW;;AAIjC,MAAI,CAACD,aAAL,EAAoB;AAClBC,IAAAA,gBAAgB,CAAC,IAAD,CAAhB;AACA,QAAMC,KAAK,yHAAX;AAQAP,IAAAA,YAAY,CAACO,KAAD,CAAZ,CACGC,IADH,CACQ,UAAAL,IAAI,EAAI;AACZC,MAAAA,OAAO,mBAAMD,IAAN,EAAP;AACD,KAHH,WAIS,UAAAM,GAAG,EAAI;AACZC,MAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACD,KANH;AAOD;;AACD,SAAO;AAAEN,IAAAA,IAAI,EAAJA;AAAF,GAAP;AACD","sourcesContent":["import React from \"react\";\r\nimport { fetchGraphQL } from \"./HelperFunctions\";\r\nexport function useGetPortfolios() {\r\n  const [data, setData] = React.useState(null);\r\n  const [dataRequested, setDataRequested] = React.useState(false);\r\n\r\n  if (!dataRequested) {\r\n    setDataRequested(true);\r\n    const query = `{\r\n      GetPortfolios{\r\n       id\r\n       title\r\n       shortDescription\r\n       technologiesUsed\r\n      }\r\n      }`;\r\n    fetchGraphQL(query)\r\n      .then(data => {\r\n        setData({ ...data });\r\n      })\r\n      .catch(err => {\r\n        console.log(err);\r\n      });\r\n  }\r\n  return { data };\r\n}\r\n"]},"metadata":{},"sourceType":"module"}