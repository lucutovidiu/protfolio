{"ast":null,"code":"import _objectSpread from \"@babel/runtime-corejs2/helpers/esm/objectSpread\";\nimport _slicedToArray from \"@babel/runtime-corejs2/helpers/esm/slicedToArray\";\nimport React from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { checkIfisAuthorized } from \"../HelperFunctions\";\n\nfunction useAuth() {\n  var authSelector = useSelector(function (state) {\n    return state;\n  });\n\n  var _React$useState = React.useState({\n    isAuthorized: {\n      checkingInProgress: true,\n      checkResult: \"NOT_CHECKED\"\n    }\n  }),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      state = _React$useState2[0],\n      setstate = _React$useState2[1];\n\n  function checkAuth() {\n    var auth = _objectSpread({}, authSelector);\n\n    if (auth.jwt !== \"\") {\n      checkIfisAuthorized(auth.jwt).then(function (data) {\n        var _JSON$parse = JSON.parse(data),\n            isAuthorized = _JSON$parse.isAuthorized;\n\n        if (isAuthorized.userEmail) {\n          // console.log(auth);\n          setstate({\n            isAuthorized: {\n              checkingInProgress: false,\n              checkResult: \"FOUND\",\n              role: auth.role,\n              jwt: auth.jwt\n            }\n          });\n        } else {\n          setstate({\n            isAuthorized: {\n              checkingInProgress: false,\n              checkResult: \"NOT_FOUND\"\n            }\n          });\n        }\n      });\n    } else {\n      setstate({\n        isAuthorized: {\n          checkingInProgress: false,\n          checkResult: \"NOT_FOUND\"\n        }\n      });\n    }\n  }\n\n  if (state.isAuthorized.checkingInProgress) {\n    checkAuth();\n  }\n\n  return state;\n}\n\nexport default useAuth;","map":null,"metadata":{},"sourceType":"module"}