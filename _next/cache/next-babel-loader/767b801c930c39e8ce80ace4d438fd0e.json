{"ast":null,"code":"import _Date$now from \"@babel/runtime-corejs2/core-js/date/now\";\nimport _Object$assign from \"@babel/runtime-corejs2/core-js/object/assign\";\nimport { createStore, applyMiddleware } from \"redux\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport thunk from \"redux-thunk\";\nvar exampleInitialState = {\n  lastUpdate: 0,\n  light: false,\n  count: 0\n};\nexport var actionTypes = {\n  TICK: \"TICK\",\n  INCREMENT: \"INCREMENT\",\n  DECREMENT: \"DECREMENT\",\n  RESET: \"RESET\"\n}; // REDUCERS\n\nexport var reducer = function reducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : exampleInitialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case actionTypes.TICK:\n      return _Object$assign({}, state, {\n        lastUpdate: action.ts,\n        light: !!action.light\n      });\n\n    case actionTypes.INCREMENT:\n      return _Object$assign({}, state, {\n        count: state.count + 1\n      });\n\n    case actionTypes.DECREMENT:\n      return _Object$assign({}, state, {\n        count: state.count - 1\n      });\n\n    case actionTypes.RESET:\n      return _Object$assign({}, state, {\n        count: exampleInitialState.count\n      });\n\n    default:\n      return state;\n  }\n}; // ACTIONS\n\nexport var serverRenderClock = function serverRenderClock() {\n  return {\n    type: actionTypes.TICK,\n    light: false,\n    ts: _Date$now()\n  };\n};\nexport var startClock = function startClock() {\n  return {\n    type: actionTypes.TICK,\n    light: true,\n    ts: _Date$now()\n  };\n};\nexport var incrementCount = function incrementCount() {\n  return {\n    type: actionTypes.INCREMENT\n  };\n};\nexport var decrementCount = function decrementCount() {\n  return {\n    type: actionTypes.DECREMENT\n  };\n};\nexport var resetCount = function resetCount() {\n  return {\n    type: actionTypes.RESET\n  };\n};\nexport function initializeStore() {\n  var initialState = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : exampleInitialState;\n  return createStore(reducer, initialState, composeWithDevTools(applyMiddleware(thunk)));\n}","map":{"version":3,"sources":["C:\\xampp\\htdocs\\ovi_port_website\\app\\components\\React-Redux\\store.js"],"names":["createStore","applyMiddleware","composeWithDevTools","thunk","exampleInitialState","lastUpdate","light","count","actionTypes","TICK","INCREMENT","DECREMENT","RESET","reducer","state","action","type","ts","serverRenderClock","startClock","incrementCount","decrementCount","resetCount","initializeStore","initialState"],"mappings":";;AAAA,SAASA,WAAT,EAAsBC,eAAtB,QAA6C,OAA7C;AACA,SAASC,mBAAT,QAAoC,0BAApC;AACA,OAAOC,KAAP,MAAkB,aAAlB;AAEA,IAAMC,mBAAmB,GAAG;AAC1BC,EAAAA,UAAU,EAAE,CADc;AAE1BC,EAAAA,KAAK,EAAE,KAFmB;AAG1BC,EAAAA,KAAK,EAAE;AAHmB,CAA5B;AAMA,OAAO,IAAMC,WAAW,GAAG;AACzBC,EAAAA,IAAI,EAAE,MADmB;AAEzBC,EAAAA,SAAS,EAAE,WAFc;AAGzBC,EAAAA,SAAS,EAAE,WAHc;AAIzBC,EAAAA,KAAK,EAAE;AAJkB,CAApB,C,CAOP;;AACA,OAAO,IAAMC,OAAO,GAAG,SAAVA,OAAU,GAAyC;AAAA,MAAxCC,KAAwC,uEAAhCV,mBAAgC;AAAA,MAAXW,MAAW;;AAC9D,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKR,WAAW,CAACC,IAAjB;AACE,aAAO,eAAc,EAAd,EAAkBK,KAAlB,EAAyB;AAC9BT,QAAAA,UAAU,EAAEU,MAAM,CAACE,EADW;AAE9BX,QAAAA,KAAK,EAAE,CAAC,CAACS,MAAM,CAACT;AAFc,OAAzB,CAAP;;AAIF,SAAKE,WAAW,CAACE,SAAjB;AACE,aAAO,eAAc,EAAd,EAAkBI,KAAlB,EAAyB;AAC9BP,QAAAA,KAAK,EAAEO,KAAK,CAACP,KAAN,GAAc;AADS,OAAzB,CAAP;;AAGF,SAAKC,WAAW,CAACG,SAAjB;AACE,aAAO,eAAc,EAAd,EAAkBG,KAAlB,EAAyB;AAC9BP,QAAAA,KAAK,EAAEO,KAAK,CAACP,KAAN,GAAc;AADS,OAAzB,CAAP;;AAGF,SAAKC,WAAW,CAACI,KAAjB;AACE,aAAO,eAAc,EAAd,EAAkBE,KAAlB,EAAyB;AAC9BP,QAAAA,KAAK,EAAEH,mBAAmB,CAACG;AADG,OAAzB,CAAP;;AAGF;AACE,aAAOO,KAAP;AAnBJ;AAqBD,CAtBM,C,CAwBP;;AACA,OAAO,IAAMI,iBAAiB,GAAG,SAApBA,iBAAoB,GAAM;AACrC,SAAO;AAAEF,IAAAA,IAAI,EAAER,WAAW,CAACC,IAApB;AAA0BH,IAAAA,KAAK,EAAE,KAAjC;AAAwCW,IAAAA,EAAE,EAAE;AAA5C,GAAP;AACD,CAFM;AAGP,OAAO,IAAME,UAAU,GAAG,SAAbA,UAAa,GAAM;AAC9B,SAAO;AAAEH,IAAAA,IAAI,EAAER,WAAW,CAACC,IAApB;AAA0BH,IAAAA,KAAK,EAAE,IAAjC;AAAuCW,IAAAA,EAAE,EAAE;AAA3C,GAAP;AACD,CAFM;AAIP,OAAO,IAAMG,cAAc,GAAG,SAAjBA,cAAiB,GAAM;AAClC,SAAO;AAAEJ,IAAAA,IAAI,EAAER,WAAW,CAACE;AAApB,GAAP;AACD,CAFM;AAIP,OAAO,IAAMW,cAAc,GAAG,SAAjBA,cAAiB,GAAM;AAClC,SAAO;AAAEL,IAAAA,IAAI,EAAER,WAAW,CAACG;AAApB,GAAP;AACD,CAFM;AAIP,OAAO,IAAMW,UAAU,GAAG,SAAbA,UAAa,GAAM;AAC9B,SAAO;AAAEN,IAAAA,IAAI,EAAER,WAAW,CAACI;AAApB,GAAP;AACD,CAFM;AAIP,OAAO,SAASW,eAAT,GAA6D;AAAA,MAApCC,YAAoC,uEAArBpB,mBAAqB;AAClE,SAAOJ,WAAW,CAChBa,OADgB,EAEhBW,YAFgB,EAGhBtB,mBAAmB,CAACD,eAAe,CAACE,KAAD,CAAhB,CAHH,CAAlB;AAKD","sourcesContent":["import { createStore, applyMiddleware } from \"redux\";\r\nimport { composeWithDevTools } from \"redux-devtools-extension\";\r\nimport thunk from \"redux-thunk\";\r\n\r\nconst exampleInitialState = {\r\n  lastUpdate: 0,\r\n  light: false,\r\n  count: 0\r\n};\r\n\r\nexport const actionTypes = {\r\n  TICK: \"TICK\",\r\n  INCREMENT: \"INCREMENT\",\r\n  DECREMENT: \"DECREMENT\",\r\n  RESET: \"RESET\"\r\n};\r\n\r\n// REDUCERS\r\nexport const reducer = (state = exampleInitialState, action) => {\r\n  switch (action.type) {\r\n    case actionTypes.TICK:\r\n      return Object.assign({}, state, {\r\n        lastUpdate: action.ts,\r\n        light: !!action.light\r\n      });\r\n    case actionTypes.INCREMENT:\r\n      return Object.assign({}, state, {\r\n        count: state.count + 1\r\n      });\r\n    case actionTypes.DECREMENT:\r\n      return Object.assign({}, state, {\r\n        count: state.count - 1\r\n      });\r\n    case actionTypes.RESET:\r\n      return Object.assign({}, state, {\r\n        count: exampleInitialState.count\r\n      });\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\n// ACTIONS\r\nexport const serverRenderClock = () => {\r\n  return { type: actionTypes.TICK, light: false, ts: Date.now() };\r\n};\r\nexport const startClock = () => {\r\n  return { type: actionTypes.TICK, light: true, ts: Date.now() };\r\n};\r\n\r\nexport const incrementCount = () => {\r\n  return { type: actionTypes.INCREMENT };\r\n};\r\n\r\nexport const decrementCount = () => {\r\n  return { type: actionTypes.DECREMENT };\r\n};\r\n\r\nexport const resetCount = () => {\r\n  return { type: actionTypes.RESET };\r\n};\r\n\r\nexport function initializeStore(initialState = exampleInitialState) {\r\n  return createStore(\r\n    reducer,\r\n    initialState,\r\n    composeWithDevTools(applyMiddleware(thunk))\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}