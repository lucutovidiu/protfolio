{"ast":null,"code":"import _JSON$stringify from \"@babel/runtime-corejs2/core-js/json/stringify\";\nimport { GraphQLClient } from \"graphql-request\";\nimport fetch from \"isomorphic-unfetch\";\nconst client = new GraphQLClient(\"http://localhost:3000/api/graphql\");\nexport const fetchGraphQL = async function (query, headers = null) {\n  if (headers) {\n    {\n      client.setHeaders(headers);\n    }\n    return client.request(query);\n  } else {\n    return client.request(query);\n  }\n};\nexport const checkIfisAuthorized = async function (jwtToken) {\n  const url = \"/api/CheckIfAuthenticated\";\n  return fetch(url, {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    body: _JSON$stringify({\n      jwtToken\n    })\n  }).then(data => {\n    // console.log(data);\n    return data.json();\n  });\n};","map":{"version":3,"sources":["C:\\xampp\\htdocs\\ovi_port_website\\app\\components\\HelperFunctions.js"],"names":["GraphQLClient","fetch","client","fetchGraphQL","query","headers","setHeaders","request","checkIfisAuthorized","jwtToken","url","method","body","then","data","json"],"mappings":";AAAA,SAASA,aAAT,QAA8B,iBAA9B;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AACA,MAAMC,MAAM,GAAG,IAAIF,aAAJ,CAAkB,mCAAlB,CAAf;AAEA,OAAO,MAAMG,YAAY,GAAG,gBAAeC,KAAf,EAAsBC,OAAO,GAAG,IAAhC,EAAsC;AAChE,MAAIA,OAAJ,EAAa;AACX;AACEH,MAAAA,MAAM,CAACI,UAAP,CAAkBD,OAAlB;AACD;AACD,WAAOH,MAAM,CAACK,OAAP,CAAeH,KAAf,CAAP;AACD,GALD,MAKO;AACL,WAAOF,MAAM,CAACK,OAAP,CAAeH,KAAf,CAAP;AACD;AACF,CATM;AAWP,OAAO,MAAMI,mBAAmB,GAAG,gBAAeC,QAAf,EAAyB;AAC1D,QAAMC,GAAG,GAAG,2BAAZ;AACA,SAAOT,KAAK,CAACS,GAAD,EAAM;AAChBC,IAAAA,MAAM,EAAE,MADQ;AAEhBN,IAAAA,OAAO,EAAE;AACP,sBAAgB;AADT,KAFO;AAKhBO,IAAAA,IAAI,EAAE,gBAAe;AACnBH,MAAAA;AADmB,KAAf;AALU,GAAN,CAAL,CAQJI,IARI,CAQCC,IAAI,IAAI;AACd;AACA,WAAOA,IAAI,CAACC,IAAL,EAAP;AACD,GAXM,CAAP;AAYD,CAdM","sourcesContent":["import { GraphQLClient } from \"graphql-request\";\r\nimport fetch from \"isomorphic-unfetch\";\r\nconst client = new GraphQLClient(\"http://localhost:3000/api/graphql\");\r\n\r\nexport const fetchGraphQL = async function(query, headers = null) {\r\n  if (headers) {\r\n    {\r\n      client.setHeaders(headers);\r\n    }\r\n    return client.request(query);\r\n  } else {\r\n    return client.request(query);\r\n  }\r\n};\r\n\r\nexport const checkIfisAuthorized = async function(jwtToken) {\r\n  const url = \"/api/CheckIfAuthenticated\";\r\n  return fetch(url, {\r\n    method: \"POST\",\r\n    headers: {\r\n      \"Content-Type\": \"application/json\"\r\n    },\r\n    body: JSON.stringify({\r\n      jwtToken\r\n    })\r\n  }).then(data => {\r\n    // console.log(data);\r\n    return data.json();\r\n  });\r\n};\r\n"]},"metadata":{},"sourceType":"module"}