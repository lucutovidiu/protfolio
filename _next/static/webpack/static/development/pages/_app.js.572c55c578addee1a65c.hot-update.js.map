{"version":3,"file":"static/webpack/static\\development\\pages\\_app.js.572c55c578addee1a65c.hot-update.js","sources":["webpack:///./pages/_app.js"],"sourcesContent":["import React from \"react\";\r\nimport App, { Container } from \"next/app\";\r\nimport \"../static/styles/_mainStyle.scss\";\r\nimport \"../static/styles/_helperClases.scss\";\r\nimport \"../static/styles/_materialDesignInput.scss\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\n// import Head from \"next/head\";\r\nimport { Provider } from \"react-redux\";\r\nimport withReduxStore from \"../components/React-Redux/with-redux-store\";\r\n// import { createStore, applyMiddleware } from \"redux\";\r\n// import UserReducer from \"../components/ReactContext/UserReducer\";\r\n// import { persistStore, persistReducer } from \"redux-persist\";\r\n// // import storage from \"redux-persist/lib/storage\"; // defaults to localStorage for web and AsyncStorage for react-native\r\n// import storage from \"redux-persist/lib/storage/session\";\r\n// import { PersistGate } from \"redux-persist/integration/react\";\r\n// import thunk from \"redux-thunk\";\r\n\r\nclass MyApp extends App {\r\n  // componentDidMount() {\r\n  //   // Remove the server-side injected CSS.\r\n  //   const jssStyles = document.querySelector(\"#jss-server-side\");\r\n  //   if (jssStyles) {\r\n  //     jssStyles.parentNode.removeChild(jssStyles);\r\n  //   }\r\n  // }\r\n\r\n  // Only uncomment this method if you have blocking data requirements for\r\n  // every single page in your application. This disables the ability to\r\n  // perform automatic static optimization, causing every page in your app to\r\n  // be server-side rendered.\r\n  //\r\n  // static async getInitialProps(appContext) {\r\n  //   // calls page's `getInitialProps` and fills `appProps.pageProps`\r\n  //   const appProps = await App.getInitialProps(appContext);\r\n\r\n  //   return { ...appProps };\r\n  // }\r\n\r\n  render() {\r\n    const { Component, pageProps, reduxStore } = this.props;\r\n    // const persistConfig = {\r\n    //   key: \"root\",\r\n    //   storage\r\n    // };\r\n    // const persistedReducer = persistReducer(persistConfig, UserReducer);\r\n    // let store = createStore(persistedReducer, applyMiddleware(thunk));\r\n    // let persistor = persistStore(store);\r\n    return (\r\n      //   <PersistGate loading={null} persistor={persistor}>\r\n      <Provider store={reduxStore}>\r\n        {/* CssBaseline kickstart an elegant, consistent, and simple baseline to build upon. */}\r\n        {/* <CssBaseline /> */}\r\n        <Component {...pageProps} />\r\n      </Provider>\r\n      //   </PersistGate>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withReduxStore(MyApp);\r\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AANA;AASA;;;;AAvCA;AACA;AAyCA;;;;A","sourceRoot":""}