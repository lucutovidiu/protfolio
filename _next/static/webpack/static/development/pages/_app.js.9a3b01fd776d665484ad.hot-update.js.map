{"version":3,"file":"static/webpack/static\\development\\pages\\_app.js.9a3b01fd776d665484ad.hot-update.js","sources":["webpack:///./components/React-Redux/store.js"],"sourcesContent":["import { createStore, applyMiddleware } from \"redux\";\r\nimport { composeWithDevTools } from \"redux-devtools-extension\";\r\nimport thunk from \"redux-thunk\";\r\n\r\nconst initialState = {\r\n  loggedInUser: \"\",\r\n  isAuthenticaticated: false,\r\n  GetPortfolios: null,\r\n  jwt: \"\"\r\n};\r\n\r\nexport const actionTypes = {\r\n  AUTH_USER: \"AUTH_USER\",\r\n  LOGOUT: \"LOGOUT\"\r\n};\r\n\r\n// REDUCERS\r\nexport const reducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case AUTH_USER: {\r\n      const newState = {\r\n        ...state,\r\n        loggedInUser: action.payload.loggedInUser,\r\n        isAuthenticaticated: true,\r\n        jwt: action.payload.jwt,\r\n        role: action.payload.role\r\n      };\r\n      return newState;\r\n    }\r\n    case LOGOUT: {\r\n      return initState;\r\n    }\r\n    // case \"GET_PORTFOLIOS\": {\r\n    //   // console.log(action.payload.GetPortfolios);\r\n    //   return {\r\n    //     // ...state,\r\n    //     GetPortfolios: action.payload.GetPortfolios\r\n    //   };\r\n    // }\r\n    // case \"REMOVE_PORTFOLIOS\": {\r\n    //   console.log(state)\r\n    //   return {\r\n    //     ...state,\r\n    //     GetPortfolios: state.GetPortfolios.filter(\r\n    //       item => item.id === action.payload\r\n    //     )\r\n    //   };\r\n    // }\r\n    default: {\r\n      return state;\r\n    }\r\n  }\r\n};\r\n\r\n// ACTIONS\r\nexport const serverRenderClock = () => {\r\n  return { type: actionTypes.TICK, light: false, ts: Date.now() };\r\n};\r\nexport const startClock = () => {\r\n  return { type: actionTypes.TICK, light: true, ts: Date.now() };\r\n};\r\n\r\nexport const incrementCount = () => {\r\n  return { type: actionTypes.INCREMENT };\r\n};\r\n\r\nexport const decrementCount = () => {\r\n  return { type: actionTypes.DECREMENT };\r\n};\r\n\r\nexport const resetCount = () => {\r\n  return { type: actionTypes.RESET };\r\n};\r\n\r\nexport function initializeStore(initialState = exampleInitialState) {\r\n  return createStore(\r\n    reducer,\r\n    initialState,\r\n    composeWithDevTools(applyMiddleware(thunk))\r\n  );\r\n}\r\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAJA;AAOA;AACA;AACA;AAFA;AACA;AAKA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAEA;AACA;AACA;AACA;AALA;AACA;AAMA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AAhCA;AAkCA;AACA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAEA;AACA;AAAA;AAAA;AACA;AAEA;AACA;AAAA;AAAA;AACA;AAEA;AACA;AAAA;AAAA;AACA;AAEA;AAAA;AACA;AAKA;;;;A","sourceRoot":""}